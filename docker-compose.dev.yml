version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:14.3-alpine3.16
    container_name: hotel_db_dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-hotel_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-1234}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - hotel_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-hotel_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Aplicación Django
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: hotel_web_dev
    command: /app/entrypoint.sh
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-myproject.settings.development}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-hotel_db}
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-1234}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${WEB_PORT:-8000}:8000"
    volumes:
      - .:/app
    networks:
      - hotel_network
    restart: unless-stopped

  # Aplicación React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hotel_frontend_dev
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://web:8000
      - WATCHPACK_POLLING=true
    depends_on:
      - web
    networks:
      - hotel_network
    stdin_open: true
    tty: true
    restart: unless-stopped

volumes:
  db_data:
    driver: local

networks:
  hotel_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
