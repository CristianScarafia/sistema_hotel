services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15
    container_name: hotel_db
    environment:
      POSTGRES_DB: hotel_db
      POSTGRES_USER: hotel_user
      POSTGRES_PASSWORD: hotel_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - hotel_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hotel_user -d hotel_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Django
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: hotel_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=myproject.settings.development
      - DATABASE_URL=postgresql://hotel_user:hotel_password@db:5432/hotel_db
      - SECRET_KEY=dev-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    depends_on:
      db:
        condition: service_healthy
    networks:
      - hotel_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hotel_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:8000/api
      - WATCHPACK_POLLING=true
      - GENERATE_SOURCEMAP=false
    depends_on:
      - backend
    networks:
      - hotel_network
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  hotel_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
